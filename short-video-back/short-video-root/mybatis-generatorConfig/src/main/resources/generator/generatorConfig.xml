<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<!--配置生成器 -->
<generatorConfiguration>
    <!-- 可以用于加载配置项或者配置文件，在整个配置文件中就可以使用${propertyKey}的方式来引用配置项
    resource：配置资源加载地址，使用resource，MBG从classpath开始找，比如com/myproject/
    generatorConfig.properties
    url：配置资源加载地质，使用URL的方式，比如file:///C:/myfolder/generatorConfig.properties.
    注意，两个属性只能选址一个;另外，如果使用了mybatis-generator-maven-plugin，那么在pom.xml中定义的
    properties都可以直接在generatorConfig.xml中使用<properties resource="" url="" /> -->

    <!-- 在MBG工作的时候，需要额外加载的依赖包
    location属性指明加载jar/zip包的全路径
    <classPathEntry location="/ProgramFiles/IBM/SQLLIB/java/db2java.zip" />
    -->

    <properties resource="application.properties"/>

    <!--
    context:生成一组对象的环境
    id:必选，上下文id，用于在生成错误时提示
    defaultModelType:指定生成对象的样式
        1，conditional：类似hierarchical；
        2，flat：所有内容（主键，blob）等全部生成在一个对象中；
        3，hierarchical：主键生成一个XXKey对象(key class)，Blob等单独生成一个对象，
        其他简单属性在一个对象中(record class)
        targetRuntime:
        1，MyBatis3：默认的值，生成基于MyBatis3.x以上版本的内容，包括XXXBySample；
        2，MyBatis3Simple：类似MyBatis3，只是不生成XXXBySample；
    introspectedColumnImpl：类全限定名，用于扩展MBG
    -->

    <context id="Mysql" targetRuntime="MyBatis3Simple" defaultModelType="flat">

        <!--beginningDelimiter和endingDelimiter：指明数据库的用于标记数据库对象名的符号，
        比如ORACLE就是双引号，MYSQL默认是`反引号； -->
        <property name="beginningDelimiter" value="`"/>


        <property name="endingDelimiter" value="`"/>

        <plugin type="tk.mybatis.mapper.generator.MapperPlugin">
            <property name="mappers" value="MyMapper"/>
        </plugin>

        <!-- 必须要有的，使用这个配置链接数据库-->
        <jdbcConnection driverClass="${spring.datasource.driver-class-name}"
                        connectionURL="${spring.datasource.url}"
                        userId="${spring.datasource.username}"
                        password="${spring.datasource.password}">
        </jdbcConnection>

        <!--自动生成的实体的存放包路径 -->
        <!-- java模型创建器，是必须要的元素
       负责：1，key类（见context的defaultModelType）；2，java类；3，查询类
       targetPackage：生成的类要放的包，真实的包受enableSubPackages属性控制；
       targetProject：目标项目，指定一个存在的目录下，生成的内容会放到指定目录中，
       如果目录不存在，MBG不会自动建目录
       -->
        <javaModelGenerator targetPackage="com.yuhangTao.pojo" targetProject="E:\wechat_app\short_video\short-video-back\short-video-root\mybatis-generatorConfig\src\main\java"/>

        <!--自动生成的*Mapper.xml文件存放路径 -->
        <!-- 生成SQL map的XML文件生成器，
       注意，在Mybatis3之后，我们可以使用mapper.xml文件+Mapper接口（或者不用mapper接口），
           或者只使用Mapper接口+Annotation，所以，如果 javaClientGenerator配置中配置了需要生成XML的话，这个元素就必须配置
       targetPackage/targetProject:同javaModelGenerator
       -->
        <sqlMapGenerator targetPackage="mapper" targetProject="E:\wechat_app\short_video\short-video-back\short-video-root\mybatis-generatorConfig\src\main\resources"/>

        <!--自动生成的*Mapper.java存放路径 -->
        <!-- 对于mybatis来说，即生成Mapper接口，注意，如果没有配置该元素，那么默认不会生成Mapper接口
        targetPackage/targetProject:同javaModelGenerator
        type：选择怎么生成mapper接口（在MyBatis3/MyBatis3Simple下）：
            1，ANNOTATEDMAPPER：会生成使用Mapper接口+Annotation的方式创建（SQL生成在annotation中），不会生成对应的XML；
            2，MIXEDMAPPER：使用混合配置，会生成Mapper接口，并适当添加合适的Annotation，但是XML会生成在XML中；
            3，XMLMAPPER：会生成Mapper接口，接口完全依赖XML；
        注意，如果context是MyBatis3Simple：只支持ANNOTATEDMAPPER和XMLMAPPER
        -->
        <javaClientGenerator targetPackage="com.yuhangTao.mapper" targetProject="E:\wechat_app\short_video\short-video-back\short-video-root\mybatis-generatorConfig\src\main\java" type="XMLMAPPER"
        >
        </javaClientGenerator>

        <!--<table tableName="country">-->
        <!--&lt;!&ndash;mysql 配置&ndash;&gt;-->
        <!--<generatedKey column="id" sqlStatement="Mysql" identity="true"/>-->
        <!--&lt;!&ndash;oracle 配置&ndash;&gt;-->
        <!--&lt;!&ndash;<generatedKey column="id" sqlStatement="select SEQ_{1}.nextval from dual" identity="false" type="pre"/>&ndash;&gt;-->
        <!--</table>-->

        <table tableName="bgm"></table>
        <table tableName="comments"></table>
        <table tableName="search_records"></table>
        <table tableName="users"></table>
        <table tableName="users_fans"></table>
        <table tableName="users_like_videos"></table>
        <table tableName="users_report"></table>
        <table tableName="videos"></table>
    </context>
</generatorConfiguration>